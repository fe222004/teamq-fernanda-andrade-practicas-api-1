openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/actors:
    get:
      summary: ''
      operationId: getApiActors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Actor management'
    post:
      summary: ''
      operationId: postApiActors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Actor management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: hiptmrcozhvpoauqghsyxotevercjkmcxpdfcfbvzmbotkhbcgbilhjakw
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: pmrd
=======
                  example: epnwrwxhsuntkvihwmkvgemndwftdpmhbnnftopccgowdxllzwbbwjbbmtrpdeuotdczmvdgopvmbdvntopkxti
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: soubkyqenatjktkhuneotiwwvqdrzifivfpclrcmtbomwthdwvraabqeitqlpooagehhqsominxpafhkfqkyixdmq
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - last_name
  '/api/actors/{actor_id}':
    get:
      summary: ''
      operationId: getApiActorsActor_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Actor management'
    put:
      summary: ''
      operationId: putApiActorsActor_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Actor management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: jkbnmpaeqsjtuzndejbnmtpjjxvdlbrlpwqzsbpwqnxeoullmkxwaamjdbxzgglzrqjgckqbkjwvduvmf
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: xlsejqabuadawcnhzlkfexomuwmtaadormxgwyxieahekuvozofdtyxo
=======
                  example: gyg
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: regpghnplkcktnjqytbvdkxvyqudjduapksqzfovkybgdrbbwxvlzammumokksmznwwgxorwjyyyyvjwsvjfkvkn
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - last_name
    delete:
      summary: ''
      operationId: deleteApiActorsActor_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Actor management'
    parameters:
      -
        in: path
        name: actor_id
        description: 'The ID of the actor.'
        example: 1
        required: true
        schema:
          type: integer
  /api/directors:
    get:
      summary: ''
      operationId: getApiDirectors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Director management'
    post:
      summary: ''
      operationId: postApiDirectors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Director management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: uhlgtnylcsfgyprtmfeeqxgzaknrcviedqldzsgrn
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: imirusamqz
=======
                  example: alwvvwifzgcbojokonwtwerslxkckhuqvuxy
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: pztusw
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - last_name
  '/api/directors/{director_id}':
    get:
      summary: ''
      operationId: getApiDirectorsDirector_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Director management'
    put:
      summary: ''
      operationId: putApiDirectorsDirector_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Director management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: ywbsmkwekjmwbtcioicqezhgqvmqirpkqdbinqknbkevjckjqrkmdktjasrswzdfjwsaiqtkkymoyasoubrsytut
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: lcvsorhhmwrkaxluxafzfagtwhjwmbchqqvom
=======
                  example: dmidkxymzrytxql
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: cfscvhqklf
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - last_name
    delete:
      summary: ''
      operationId: deleteApiDirectorsDirector_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Director management'
    parameters:
      -
        in: path
        name: director_id
        description: 'The ID of the director.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
<<<<<<< HEAD
                  example: exercitationem
                age:
                  type: string
                  description: ''
                  example: nam
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: candida53@example.net
                password:
                  type: string
                  description: ''
                  example: dolor
=======
                  example: laboriosam
                age:
                  type: string
                  description: ''
                  example: assumenda
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: atremblay@example.net
                password:
                  type: string
                  description: ''
                  example: aut
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - age
                - email
                - password
      security: []
  /api/movies:
    get:
      summary: ''
      operationId: getApiMovies
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Movie management'
    post:
      summary: ''
      operationId: postApiMovies
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: qawmbexlowppciihzmylzjusnjosmdpnzhffvzflsbaxzrjrnyvcckzntlbhecsrqukliz
                description:
                  type: string
                  description: ''
                  example: quia
                genre:
                  type: string
                  description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
                  example: ubdscbhyzhhfahtmqfmbyoymmuze
                publish_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                director_id:
                  type: string
                  description: ''
                  example: placeat
=======
                  example: mcsps
                description:
                  type: string
                  description: ''
                  example: fugit
                genre:
                  type: string
                  description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
                  example: blu
                publish_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                director_id:
                  type: string
                  description: ''
                  example: distinctio
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - title
                - description
                - genre
                - publish_at
                - director_id
  '/api/movies/{movie_id}':
    get:
      summary: ''
      operationId: getApiMoviesMovie_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Movie management'
    put:
      summary: ''
      operationId: putApiMoviesMovie_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be at least 3 characters.'
<<<<<<< HEAD
                  example: pqfounpeodmcuzrfywpovp
                description:
                  type: string
                  description: ''
                  example: debitis
                genre:
                  type: string
                  description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
                  example: yxdghqndebdiiovheyfrsmefafhspxtborgstymcfvdlkbrerlltlkodpyngribhdxwk
                publish_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                director_id:
                  type: string
                  description: ''
                  example: odio
=======
                  example: nhetvgmmhfztohjnoqvuxy
                description:
                  type: string
                  description: ''
                  example: et
                genre:
                  type: string
                  description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
                  example: irhjndxctefzrpkgleccrvgowxo
                publish_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                director_id:
                  type: string
                  description: ''
                  example: quisquam
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - title
                - description
                - genre
                - publish_at
                - director_id
    parameters:
      -
        in: path
        name: movie_id
        description: 'The ID of the movie.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/movie/{movie_id}':
    delete:
      summary: ''
      operationId: deleteApiMovieMovie_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
    parameters:
      -
        in: path
        name: movie_id
        description: 'The ID of the movie.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/movies/{movie_id}/actors':
    get:
      summary: ''
      operationId: getApiMoviesMovie_idActors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Movie management'
    post:
      summary: ''
      operationId: postApiMoviesMovie_idActors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actors:
                  type: array
                  description: ''
                  example:
<<<<<<< HEAD
                    - debitis
=======
                    - vel
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
                  items:
                    type: string
              required:
                - actors
    delete:
      summary: ''
      operationId: deleteApiMoviesMovie_idActors
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actors:
                  type: array
                  description: ''
                  example:
<<<<<<< HEAD
                    - suscipit
=======
                    - autem
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
                  items:
                    type: string
              required:
                - actors
    parameters:
      -
        in: path
        name: movie_id
        description: 'The ID of the movie.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/movies/{movie_id}/rents':
    get:
      summary: ''
      operationId: getApiMoviesMovie_idRents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Movie management'
    post:
      summary: ''
      operationId: postApiMoviesMovie_idRents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rents:
                  type: array
                  description: ''
                  example:
<<<<<<< HEAD
                    - alias
=======
                    - illum
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
                  items:
                    type: string
              required:
                - rents
    delete:
      summary: ''
      operationId: deleteApiMoviesMovie_idRents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Movie management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rents:
                  type: array
                  description: ''
                  example:
<<<<<<< HEAD
                    - quis
=======
                    - hic
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
                  items:
                    type: string
              required:
                - rents
    parameters:
      -
        in: path
        name: movie_id
        description: 'The ID of the movie.'
        example: 1
        required: true
        schema:
          type: integer
  /api/rents:
    get:
      summary: ''
      operationId: getApiRents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Rent management'
    post:
      summary: ''
      operationId: postApiRents
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Rent management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deadline_at:
                  type: string
                  description: 'Must be a valid date.'
<<<<<<< HEAD
                  example: '2023-08-09T23:13:19'
                return_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                actual_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                user_id:
                  type: string
                  description: ''
                  example: qui
=======
                  example: '2023-08-08T20:52:20'
                return_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                actual_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                user_id:
                  type: string
                  description: ''
                  example: rerum
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - deadline_at
                - return_date_at
                - actual_date_at
                - user_id
  '/api/rents/{rent_id}':
    get:
      summary: ''
      operationId: getApiRentsRent_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Rent management'
    put:
      summary: ''
      operationId: putApiRentsRent_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Rent management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deadline_at:
                  type: string
                  description: 'Must be a valid date.'
<<<<<<< HEAD
                  example: '2023-08-09T23:13:19'
                return_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                actual_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-09T23:13:19'
                user_id:
                  type: string
                  description: ''
                  example: voluptate
=======
                  example: '2023-08-08T20:52:20'
                return_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                actual_date_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-08T20:52:20'
                user_id:
                  type: string
                  description: ''
                  example: iste
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - deadline_at
                - return_date_at
                - actual_date_at
                - user_id
    delete:
      summary: ''
      operationId: deleteApiRentsRent_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Rent management'
    parameters:
      -
        in: path
        name: rent_id
        description: 'The ID of the rent.'
        example: 1
        required: true
        schema:
          type: integer
  /api/auth:
    post:
      summary: ''
      operationId: postApiAuth
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Security management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
<<<<<<< HEAD
                  example: deshawn03@example.org
                password:
                  type: string
                  description: ''
                  example: animi
=======
                  example: rstreich@example.net
                password:
                  type: string
                  description: ''
                  example: doloribus
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - email
                - password
      security: []
  '/api/user/{user_id}':
    get:
      summary: ''
      operationId: getApiUserUser_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User management'
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/auth/{user_id}':
    put:
      summary: ''
      operationId: putApiAuthUser_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
<<<<<<< HEAD
                  example: asperiores
                age:
                  type: string
                  description: ''
                  example: maiores
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: albin.bogan@example.net
                password:
                  type: string
                  description: ''
                  example: eum
=======
                  example: eum
                age:
                  type: string
                  description: ''
                  example: ut
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: oda33@example.net
                password:
                  type: string
                  description: ''
                  example: quis
>>>>>>> DM2-981-crear-endpoint-para-edicion-de-usuarios
              required:
                - name
                - age
                - email
                - password
    delete:
      summary: ''
      operationId: deleteApiAuthUser_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Actor management'
    description: ''
  -
    name: 'Director management'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Movie management'
    description: ''
  -
    name: 'Rent management'
    description: ''
  -
    name: 'Security management'
    description: ''
  -
    name: 'User management'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
