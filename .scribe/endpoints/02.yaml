name: 'Movie management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"title":"Spider-Man","description":"Welcome home","genre":"ACCION","publish_at":"2023-08-03","director_id":1,"created_at":"2023-08-03T19:59:01.000000Z","updated_at":"2023-08-03T19:59:02.000000Z"},{"id":2,"title":"Iroma","description":"Soldado del Invierno","genre":"ACCION","publish_at":"2020-08-03","director_id":2,"created_at":"2023-08-03T20:08:10.000000Z","updated_at":"2023-08-03T20:08:14.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"title":"Spider-Man","description":"Welcome home","genre":"ACCION","publish_at":"2023-08-03","director_id":1,"created_at":"2023-08-03T19:59:01.000000Z","updated_at":"2023-08-03T19:59:02.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: ejncextvszdaaaeutumkhgxcntfnrsoryytpoeprpabpvdvsvqeigystfqhg
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: pariatur
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: gitgtthrvirpdyy
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-04T20:57:00'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      title: ejncextvszdaaaeutumkhgxcntfnrsoryytpoeprpabpvdvsvqeigystfqhg
      description: pariatur
      genre: gitgtthrvirpdyy
      publish_at: '2023-08-04T20:57:00'
      director_id: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: ozoqcouocjwuoucqaqqjihusvkmrkhpniecxifdibtdlzmvooxgk
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: sit
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: ypjnwyucumkhygqruveaqjbmutnetawotjypslxgfrdcdmsfxhrrqtpeqwrngjhrckjnirfnleapracgakajdqnufp
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-04T20:57:00'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: labore
        type: string
        custom: []
    cleanBodyParameters:
      title: ozoqcouocjwuoucqaqqjihusvkmrkhpniecxifdibtdlzmvooxgk
      description: sit
      genre: ypjnwyucumkhygqruveaqjbmutnetawotjypslxgfrdcdmsfxhrrqtpeqwrngjhrckjnirfnleapracgakajdqnufp
      publish_at: '2023-08-04T20:57:00'
      director_id: labore
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movie/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"Tom","lastName":"Holland","createdAt":"2023-08-03T16:17:31.000000Z"}],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/actors","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - dolore
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - dolore
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - nam
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - nam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rents
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"deadlineAt":"2023-08-03","returnDateAt":"2023-08-03","actualDateAt":"2023-08-03","userId":1}],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/rents","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rents
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - deserunt
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - deserunt
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rents
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - dolorum
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - dolorum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
