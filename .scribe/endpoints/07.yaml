name: 'Images management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/images'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"url":"http:\/\/localhost:8000\/storage\/images\/KfUC3He02fgDhqcS.gif","createdAt":"14\/Aug, 2023"}],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/images","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pa61dhecb58ZDfEg6v43kaV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/images'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: ''
        required: true
        example: vel
        type: string
        custom: []
    cleanBodyParameters:
      url: vel
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gha3eV5df6kv6ca4DP1Zb8E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"url":"http:\/\/localhost:8000\/storage\/images\/KfUC3He02fgDhqcS.gif","createdAt":"14\/Aug, 2023"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DvVd4gEZc58b16ke63ahafP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: ''
        required: true
        example: amet
        type: string
        custom: []
    cleanBodyParameters:
      url: amet
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kPVbca6gv5Ea184ef63hDdZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer faEvd64acPgVb6ek3h1Z85D'
    controller: null
    method: null
    route: null
    custom: []
