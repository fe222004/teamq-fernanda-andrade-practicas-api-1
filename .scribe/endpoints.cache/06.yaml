## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Images management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/images'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters:
      per_page:
        name: per_page
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
    cleanQueryParameters:
      per_page: 10
      page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","prev":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=9","next":null},"meta":{"current_page":10,"from":null,"last_page":1,"links":[{"url":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=9","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/images?page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/images","per_page":15,"to":null,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bP8cZgv1akEe4fdD66haV35'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/images'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: ''
        required: true
        example: quis
        type: string
        custom: []
    cleanBodyParameters:
      url: quis
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 568fkh1a3V6cvEPd4egbDaZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"url":"http:\/\/localhost:8000\/storage\/images\/KfUC3He02fgDhqcS.gif","createdAt":"14\/Aug, 2023"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6a85dfV4heb13cEDZaPg6k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: ''
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      url: et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaZD8b1vEc463PVed5ak6fh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/images/{id}'
    metadata:
      groupName: 'Images management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the image.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaPv3d86e4V5Ec16ZDfhkab'
    controller: null
    method: null
    route: null
    custom: []
