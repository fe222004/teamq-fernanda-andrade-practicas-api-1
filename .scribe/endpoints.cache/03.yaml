## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Movie management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: perPage
        required: true
        example: 8
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: true
        example: 16
        type: integer
        custom: []
    cleanQueryParameters:
      per_page: 8
      page: 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/api\/movies?page=1","last":"http:\/\/localhost:8000\/api\/movies?page=3","prev":"http:\/\/localhost:8000\/api\/movies?page=15","next":null},"meta":{"current_page":16,"from":null,"last_page":3,"links":[{"url":"http:\/\/localhost:8000\/api\/movies?page=15","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies?page=1","label":"1","active":false},{"url":"http:\/\/localhost:8000\/api\/movies?page=2","label":"2","active":false},{"url":"http:\/\/localhost:8000\/api\/movies?page=3","label":"3","active":false},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies","per_page":15,"to":null,"total":40}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kE8P6vD4a5cfgVd6Z1he3ba'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"title":"Dr.","description":"Qui esse quis labore nesciunt praesentium voluptatum consequatur. Officiis et aut veniam sed. Quae autem neque architecto voluptas consectetur. Doloremque sunt ut est facere voluptatem.","genre":"1","publish_at":"1977-08-21","director_id":10,"created_at":"2023-08-17T20:45:09.000000Z","updated_at":"2023-08-17T20:45:09.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fhbZad1Vvg643cEk8aD6eP5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: hoyunqgyajjdwayubhgphleaqbilrnqgslbt
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: non
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: qvvdjdoshyaclpwhszrnfaawgxberjypdqrvbhvpnroppphqqayyfrqbnztwpgpvgzfrlmfzxiskhyblwn
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-17T21:07:30'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: in
        type: string
        custom: []
    cleanBodyParameters:
      title: hoyunqgyajjdwayubhgphleaqbilrnqgslbt
      description: non
      genre: qvvdjdoshyaclpwhszrnfaawgxberjypdqrvbhvpnroppphqqayyfrqbnztwpgpvgzfrlmfzxiskhyblwn
      publish_at: '2023-08-17T21:07:30'
      director_id: in
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6a6hVZPgvcebkDE8f4a3d51'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: mrgpjsjejtof
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: quam
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: kbbtulzdkmjsxpuisclwdzwaeespzzpczojdazopsokpukueqsuedwybhybxopshbzkpeutzuwscmhxpxceuxl
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-17T21:07:30'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: in
        type: string
        custom: []
    cleanBodyParameters:
      title: mrgpjsjejtof
      description: quam
      genre: kbbtulzdkmjsxpuisclwdzwaeespzzpczojdazopsokpukueqsuedwybhybxopshbzkpeutzuwscmhxpxceuxl
      publish_at: '2023-08-17T21:07:30'
      director_id: in
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZbE3gd6c4aVkvh86Pefa51D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movie/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3a1ZP5vfE6h8kDcga6d4eVb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":16,"name":"Jammie Cormier MD","lastName":"Considine","createdAt":"2023-08-17T20:43:36.000000Z"},{"id":15,"name":"Lisette Treutel","lastName":"Bins","createdAt":"2023-08-17T20:43:36.000000Z"},{"id":15,"name":"Lisette Treutel","lastName":"Bins","createdAt":"2023-08-17T20:43:36.000000Z"},{"id":16,"name":"Jammie Cormier MD","lastName":"Considine","createdAt":"2023-08-17T20:43:36.000000Z"},{"id":3,"name":"Mckenna Quitzon IV","lastName":"Fritsch","createdAt":"2023-08-17T20:42:54.000000Z"}],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/actors?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/actors","per_page":15,"to":5,"total":5}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Egc1eZPV8bvd5Da3hk64af6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - quasi
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - quasi
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaV6ZEf364vek1PD5acd8bh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - aut
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - aut
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6VPfk3cvda6abeZ8gD514E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","last":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/movies\/1\/rents?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/movies\/1\/rents","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 38Dekc651Pv4gdfhbaaV6EZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - consequatur
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6ZDP6fca48b31agVEv5edh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - quaerat
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - quaerat
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZP6c4aVbEfD1aghedkv3856'
    controller: null
    method: null
    route: null
    custom: []
