## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Movie management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/movies
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: hmdrplwpkoilmaeoxpbpdfcaysxiinqbfutyqslm
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: gapupqycvhzrvvftkhrkfbdkzqonspdkapvmcttffxbfcquariaotenhnmtyupwyfxghdnmtmkvtpwdcyli
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-07T20:24:59'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: eum
        type: string
        custom: []
    cleanBodyParameters:
      title: hmdrplwpkoilmaeoxpbpdfcaysxiinqbfutyqslm
      description: consequatur
      genre: gapupqycvhzrvvftkhrkfbdkzqonspdkapvmcttffxbfcquariaotenhnmtyupwyfxghdnmtmkvtpwdcyli
      publish_at: '2023-08-07T20:24:59'
      director_id: eum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/movies/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters.'
        required: true
        example: bsmcscfvxlkqaydpwazuqsmotfcceqnystbxbwykgkpbmgsozwpjhoohuixyrqepdxqkfvglciswzp
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: impedit
        type: string
        custom: []
      genre:
        name: genre
        description: 'Must be one of <code>TERROR</code>, <code>ACCION</code>, <code>COMEDIA</code>, or <code>ROMANCE</code> Must be at least 3 characters.'
        required: true
        example: qxgpybcewvanvnmxcimsietnhhhwngasxyectlvixsdqtxzcdhtmwjrlsuptuwnbusfyfqcokmorfseerqywdvpt
        type: string
        custom: []
      publish_at:
        name: publish_at
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-07T20:24:59'
        type: string
        custom: []
      director_id:
        name: director_id
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
    cleanBodyParameters:
      title: bsmcscfvxlkqaydpwazuqsmotfcceqnystbxbwykgkpbmgsozwpjhoohuixyrqepdxqkfvglciswzp
      description: impedit
      genre: qxgpybcewvanvnmxcimsietnhhhwngasxyectlvixsdqtxzcdhtmwjrlsuptuwnbusfyfqcokmorfseerqywdvpt
      publish_at: '2023-08-07T20:24:59'
      director_id: tempora
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movie/{movie_id}'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - maiores
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - maiores
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/actors'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Actors
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      actors:
        name: actors
        description: ''
        required: true
        example:
          - incidunt
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      actors:
        - incidunt
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - dicta
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - dicta
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/movies/{movie_id}/rents'
    metadata:
      groupName: 'Movie management'
      groupDescription: ''
      subgroup: Rent
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_id:
        name: movie_id
        description: 'The ID of the movie.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      movie_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rents:
        name: rents
        description: ''
        required: true
        example:
          - sed
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      rents:
        - sed
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
